@model Wardrobe.Models.Accessory

@{
    ViewBag.Title = "Create";
}

<h2 class="createheader">Accessories</h2>

<body class="mainpages" background="https://static.pexels.com/photos/172292/pexels-photo-172292.jpeg>">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AccessoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccessoryName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessoryName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccessoryPhoto, htmlAttributes: new { @class = "control-label col-md-2 photolabel" })
                <div class="col-md-10">
                    <p class="urlwarning">Must enter url. ex:https://photo.jpg</p>
                    @Html.EditorFor(model => model.AccessoryPhoto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessoryPhoto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccesoryType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AccesoryType, new SelectList(
                  new List<Object>{
                       new { value ="Necklace", text = "Necklace"  },
                       new { value = "Bracelet" , text = "Bracelet" },
                       new { value = "Watch" , text = "Watch"},
                       new {value="Ring",text="Ring"},
                       new {value="Belt", text="Belt"},
                       new {value="Earrings", text="Earrings"},
                       new {value="Sunglasses", text="Sunglasses"},
                       new {value="Bag",text="Bag"}
                    },
                  "value",
                  "text",
                   0))
                    @Html.ValidationMessageFor(model => model.AccesoryType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ColorID, "ColorID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ColorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SeasonID, "SeasonID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SeasonID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SeasonID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OccasionID, "OccasionID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OccasionID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OccasionID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
